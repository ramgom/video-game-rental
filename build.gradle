plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'rga,ramgom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.opencsv:opencsv:5.0'
	implementation 'org.flywaydb:flyway-core'
	implementation 'com.google.guava:guava:29.0-jre'
	implementation 'io.springfox:springfox-swagger2:3.0.0-SNAPSHOT'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT'
	implementation 'io.springfox:springfox-data-rest:3.0.0-SNAPSHOT'

	runtime 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

	testImplementation 'org.jmockit:jmockit:1.49'
	testImplementation 'org.assertj:assertj-core:3.11.1'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
}
